import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score
import joblib

# Load data
df = pd.read_csv("air_quality_data.csv")

# Preprocessing
df.dropna(inplace=True)
df = df[['PM2.5', 'PM10', 'NO2', 'SO2', 'CO', 'O3', 'AQI']]

# Feature and target
X = df.drop('AQI', axis=1)
y = df['AQI']

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model
model = RandomForestRegressor()
model.fit(X_train, y_train)

# Evaluate
y_pred = model.predict(X_test)
print("RMSE:", np.sqrt(mean_squared_error(y_test, y_pred)))
print("MAE:", mean_absolute_error(y_test, y_pred))
print("RÂ² Score:", r2_score(y_test, y_pred))

# Save model
joblib.dump(model, "aqi_model.pkl")



X_test_scaled = scaler.transform(X_test)



# Step 7: Train a model (Random Forest)

model = RandomForestClassifier(n_estimators=100, random_state=42) model.fit(X_train_scaled, y_train)


# Step 8: Make predictions

y_pred = model.predict(X_test_scaled)



# Step 9: Evaluation print("Classification Report:\n")
print(classification_report(y_test, y_pred))



# Confusion matrix

cm = confusion_matrix(y_test, y_pred) plt.figure(figsize=(8,6))
sns.heatmap(cm, annot=True, fmt='d', cmap='Blues') plt.xlabel("Predicted")
plt.ylabel("True") plt.title("Confusion Matrix") plt.show()
